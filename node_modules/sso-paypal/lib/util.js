'use strict';

const tryRequire = require('try-require');
const Cal = tryRequire('cal');

function expiresAfter(min) {
    min = min || 15;
    return Date.now() + min * 60 * 1000;
}

function timestamp() {
    const d = new Date();
    const time = [pad(d.getHours()),
                pad(d.getMinutes()),
                pad(d.getSeconds())].join(':');
    return [d.getYear() % 100, d.getMonth() + 1, d.getDate() ].join('-') + ':' + time;
}

function pad(n) {
    return n < 10 ? '0' + n.toString(10) : n.toString(10);
}

function createCalTransaction(type, data) {
    let calTxn = null;
    if (Cal) {
        calTxn = Cal.createTransaction(type, data);
    } else {
        console.error(timestamp(), type, data, 'CAL MODULE INIT FAILED');
    }
    return calTxn;
}

function getCalStatus(str) {
    str = str || 'success';
    let status = null;
    if (Cal) {
        if (str === 'error') {
            status = Cal.Status.ERROR;
        } else if (str === 'warning') {
            status = Cal.Status.WARNING;
        } else {
            status = Cal.Status.SUCCESS;
        }
    }
    return status;
}

module.exports = {
    expiresAfter: expiresAfter,
    getCalStatus: getCalStatus,
    createCalTransaction: createCalTransaction
};

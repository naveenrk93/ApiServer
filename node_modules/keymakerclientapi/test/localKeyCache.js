/**
 * Created by klakhwani on 1/20/17.
 */
'use strict';
var assert = require('assert');
var cal = require('cal');
var freshy = require('freshy');
var KeyMakerClient = require('../index');
var fs = require('fs');
var path = require('path');
cal.setDefaultWriteStream('console');
var kmClient;


describe('Local key cache testing', function () {
    var reqObj = {
        keyId: 'encrypted_test_aes_gcm_crypt_key',
        data: new Buffer('thisissimple'),
        isPKCS7: false
    };

    it('Successful local key cache creation', function (next) {
        // Unload the keymakerclient module and reload it afresh
        // else create can't be made with different parameters
        var unloaded = freshy.unload('../index');
        console.log('Unloaded=' + unloaded);
        KeyMakerClient = require('../index');
        this.timeout(20000);
        process.env.SHARE_PWD = 'aardvark';
        var opt = {};
        opt.appname = 'keymakerapiclientnodeapp';
        opt.unitTest = true;
        KeyMakerClient.create(opt, function (err, obj) {
            assert(!err);
            assert(obj, 'expecting keymaker client object to be created successfully');
            kmClient = obj;

            kmClient.encrypt(reqObj, function (err, res) {
                assert(!err);
                assert(res, 'expecting response from encrypt API');
                assert(res.result.encodedData, 'expecting encrypted and encoded data');
                next();
            });
        });
    });

    it('Successfully loading local key cache', function (next) {
        // Unload the keymakerclient module and reload it afresh
        // else create can't be made with different parameters
        var unloaded = freshy.unload('../index');
        console.log('Unloaded=' + unloaded);
        KeyMakerClient = require('../index');
        this.timeout(20000);
        process.env.SHARE_PWD = 'aardvark';
        var opt = {};
        opt.appname = 'keymakerapiclientnodeapp';
        opt.host = '127.0.0.1'; // Random IP where keymakeragent should not be running
        opt.unitTest = true;
        KeyMakerClient.create(opt, function (err, obj) {
            assert(!err);
            assert(obj, 'expecting keymaker client object to be created successfully');
            kmClient = obj;

            kmClient.encrypt(reqObj, function (err, res) {
                assert(!err);
                assert(res, 'expecting response from encrypt API');
                assert(res.result.encodedData, 'expecting encrypted and encoded data');
                next();
            });
        });
    });

    it('No local key cache found & DEV environment', function (next) {
        this.timeout(20000);
        fs.unlink(path.normalize(__dirname + '/../node_modules/testkeystore/keymaker_cache.enc'), function (err) {
           assert(!err, 'no error');
           // Unload the keymakerclient module and reload it afresh
           // else create can't be made with different parameters
           var unloaded = freshy.unload('../index');
           console.log('Unloaded=' + unloaded);
           KeyMakerClient = require('../index');
           process.env.SHARE_PWD = 'aardvark';
           var opt = {};
           opt.appname = 'keymakerapiclientnodeapp';
           opt.host = '127.0.0.1'; // Random IP where keymakeragent should not be running
            opt.unitTest = true;
           KeyMakerClient.create(opt, function (err, obj) {
               assert(!err, 'No error');
               assert(obj, 'keymaker client object should be returned without any keys');
               kmClient = obj;
               kmClient.encrypt(reqObj, function (err, res) {
                   assert(err, 'Error in encrypt');
                   assert(!res, 'Not expecting response from encrypt API');
                   next();
               });
           });
       });
    });

    after('keymaker shutdown', function (next) {
        KeyMakerClient.shutdown();
        next();
    });
});
'use strict';

var assert = require('assert'),
    qs = require('querystring'),
    async = require('async'),
    calutils = require('../lib/calutils'),
    apputil = require('../lib/apputil');

describe('utils', function () {

    describe('apputil', function () {

        it('checking package name', function () {
            var appName = apputil.getAppName();
            assert.ok(appName === 'cal');
        });

        it('checking build version', function () {
            var buildVersion = apputil.getBuildVersion();
            assert.ok(!buildVersion);
        });
    });

    describe('calutils', function () {

        it('FilterPII', function () {
            var sampleData = '{"events":{"actor":{"tracking_visit_id":"VPdzLxzGVF2AptRjX1ns7Kd_Yxo2_noB"},"channel":"web","tracking_event":1461259686355,"http_params":{"accept_charset":"application/json, text/javascript, */*; q=0.01","accept_lang":"en-US,en;q=0.8","host_header":"localhost.paypal.com:8000","user_agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36","referrer":"http://localhost.paypal.com:8000/signin/inject/?stsRedirectUri=urn:ietf:wg:oauth:2.0:oob&country.x=US&locale.x=en_US&rememberMe=true&flowId=EC-3KJ9438448093911C&correlationId=823kjs9823sd&returnUri=https://www.paypal.com/checkoutnow/2&state=?flow=1-P&token=EC-3XA53578GX278552P&email=hello.world%40paypal.fr&rememberMeContent=&prompt=","ip_address":"1.2.3.4"},"event_params":{"context_id":"EC-3KJ9438448093911C","flow_logging_id":"217f4440ee124","cal_correlation_id":"68d06860a3859","comp":"unifiedloginnodeweb","tsrce":"unifiedloginnodeweb","uuid":"4e843217856e4e63b8328e281222779d","user_session_guid":"39cb09591540a495a055f6a5fd25fb8f","user_guid":"3987899d1540a491207509a5ff180e08","buyer_ip":"1.2.3.4","framework_call_type":"si","enrich":"n","http_response_code":200,"device_type":"DESKTOP","device_name":"Chrome - OS X","browser_type":"CH","browser_version":"49.0.2623.112","client_os":"MAC","is_cookied_user":1,"timestamp_serverside_request":1461259686355,"timestamp_serverside_response":1461259688438,"server_epoch_timestamp":1461259688438}}}';
            var data = calutils.filterPII('url: https://www.paypal.com/checkoutnow/hello.world@gmail.com');
            assert.ok(data === 'url: https://www.paypal.com/checkoutnow/xxx@xxx.xxx');

            data = calutils.filterPII('{"events":{"referrer":"http://localhost.paypal.com:8000/signin/inject/?returnUri=https%3A%2F%2Fwww.paypal.com%2Fcheckoutnow%2F2&state=%3Fflow%3D1-P%26token%3DEC-3XA53578GX278552P%26login_email%3Dhello.world%40paypal.fr&prompt="}}');
            assert.ok(data === '{"events":{"referrer":"http://localhost.paypal.com:8000/signin/inject/?returnUri=https://www.paypal.com/checkoutnow/2&state=?flow=1-P&token=EC-3XA53578GX278552P&login_email=xxx@xxx.xxx&prompt="}}');

            data = calutils.filterPII({inputParam: 'returnUri=https://www.paypal.com/checkoutnow/2*state=?flow=1-P*email=hello.world@paypal.fr*rememberMeContent=*prompt=&'});
            assert.ok(data.inputParam.indexOf('returnUri=https://www.paypal.com/checkoutnow/2*state=?flow=1-P*email=xxx@xxx.xxx*rememberMeContent=*prompt=&') !== -1);
            data = calutils.filterPII(JSON.parse(sampleData));
            data = JSON.stringify(data);
            assert.ok(data.indexOf('xxx@xxx.xxx') !== -1);
        });

        it.skip('FilterPII loop 10000x', function (next) {
            async.times(10000, function (n, cb) {
                var data = calutils.filterPII('url: https://www.paypal.com/checkoutnow/hello.world@gmail.com');
                assert.ok(data === 'url: https://www.paypal.com/checkoutnow/xxx@xxx.xxx');

                data = calutils.filterPII('{"events":{"referrer":"http://localhost.paypal.com:8000/signin/inject/?returnUri=https%3A%2F%2Fwww.paypal.com%2Fcheckoutnow%2F2&state=%3Fflow%3D1-P%26token%3DEC-3XA53578GX278552P%26login_email%3Dhello.world%40paypal.fr&prompt="}}');
                assert.ok(data === '{"events":{"referrer":"http://localhost.paypal.com:8000/signin/inject/?returnUri=https://www.paypal.com/checkoutnow/2&state=?flow=1-P&token=EC-3XA53578GX278552P&login_email=xxx@xxx.xxx&prompt="}}');

                data = calutils.filterPII({inputParam: 'returnUri=https://www.paypal.com/checkoutnow/2*state=?flow=1-P*email=hello.world@paypal.fr*rememberMeContent=*prompt=&'});
                assert.ok(data.inputParam.indexOf('returnUri=https://www.paypal.com/checkoutnow/2*state=?flow=1-P*email=xxx@xxx.xxx*rememberMeContent=*prompt=&') !== -1);
                cb();
            }, function () {
                next();
            });
        });

        it('should `escapeControlChars`', function() {
            assert.equal(
                calutils.escapeControlChars('ab\rcd\nef\tgh\fij&kl'),
                'ab\\rcd\\nef\\tgh\\fij&kl');
        });

        it('should `escapeControlCharsAndAmp`', function() {
            assert.equal(
                calutils.escapeControlCharsAndAmp('ab\rcd\nef\tgh\fij&kl'),
                'ab\\rcd\\nef\\tgh\\fij*kl');
        });

        it('should `stringifyObject` without circular values', function() {
            assert.equal(
                calutils.stringifyObject({ a: 1, b: true, c: {}, d: 'ok' }),
                'a=1&b=true&c=&d=ok');
        });

        it('should `stringifyObject` with circular values', function() {
            var obj = { a: 1, b: true, c: null, d: 'ok' };
            obj.c = obj;
            assert.equal(calutils.stringifyObject(obj),
                'a=1&b=true&c=[Circular ~]&d=ok');

            // Cross-check against slow method
            assert.equal(calutils.stringifyObject(obj),
                         qs.unescape(qs.stringify(calutils.parseJSON(obj))));
        });

        it('should `formatTimestamp`', function() {
            assert.ok(/^\d{2}:\d{2}:\d{2}.\d{2}$/.test(
                calutils.formatTimestamp(1496716001391)));
        });
    });
});

'use strict';

const assert = require('assert');
const benchmark = require('benchmark');
const cal = require('../');
const calutils = require('../lib/calutils');

const suite = new benchmark.Suite();
const ts = 1496716001391;
const tsHours = new Date(ts).getHours();

function formatSmall() {
    return cal.formatter.cal.format({
        'type': 'RANDOM_CAL_STUFF',
        'name': 'MayflyGet',
        'status': '2',
        'data': {
            'corr_id_': '936e2ff0e62f7',
            'key1': { 'foo': 'foo1' },
            'key2': { 'foo': 'foo2' },
            'key3': { 'foo': 'foo3' }
        },
        'messageClass': 'A',
        'timestamp': ts,
        'threadId': 2,
        'eventId': 175,
        'parentEventId': 0,
        'duration': 0,
        'logger': 'root'
    });
}

suite.add('formatter.cal (small payload)', () => {
    formatSmall();
});

suite.add('calutils.isPIISafe', () => {
    calutils.isPIISafe('username');
    calutils.isPIISafe('creditcard');
    calutils.isPIISafe('kitties');
});

suite
    .on('cycle', (event) => {
        console.log(String(event.target));
        if (event.target.error)
            console.error(event.target.error);
    })
    .run();

'use strict';

const benchmark = require('benchmark');

const cal = require('../');

const Writable = require('stream').Writable;

const blackhole = new Writable({
    write: (data, enc, callback) => {
        callback();
    }
});

cal.defaults = {
    writerOptions: {
        targetStream: blackhole
    }
};

const suite = new benchmark.Suite();

suite.add('createTransaction()', () => {
    let calTrans = cal.createTransaction('RANDOM_CAL_STUFF', 'MayflyGet');
    calTrans.status = cal.Status.ERROR;
    calTrans.addData('key1', {foo: 'foo1'});
    calTrans.addData('key2', {foo: 'foo2'});
    calTrans.addData('key3', {foo: 'foo3'});
    calTrans.complete();
});

suite
    .on('cycle', (event) => {
        console.log(String(event.target));
        if (event.target.error)
            console.error(event.target.error);
    })
    .run();
